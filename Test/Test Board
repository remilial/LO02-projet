import model.board.Board;
import model.board.Sector;
import model.board.SystemType;
import model.board.Ship;

public class Main {
    public static void main(String[] args) {
        try {
            testBoardSingleton();
            testSectorRetrieval();
            testBoardReset();
            System.out.println("All Board tests passed successfully.");
        } catch (AssertionError e) {
            System.err.println("Test failed: " + e.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // 1. Test Singleton Pattern for Board
    public static void testBoardSingleton() {
        System.out.println("Testing Board Singleton...");

        Board board1 = Board.getInstance();
        Board board2 = Board.getInstance();

        assert board1 == board2 : "Singleton test failed: Multiple Board instances exist.";

        System.out.println("Board singleton test passed.\n");
    }

    // 2. Test Sector Retrieval by Coordinates
    public static void testSectorRetrieval() {
        System.out.println("Testing Sector Retrieval...");

        Board board = Board.getInstance();
        board.resetBoard();  // Ensure clean board before testing

        Sector sector = board.getSector(1, 1);
        assert sector != null : "Sector retrieval failed for (1, 1).";

        sector.setSystemType(SystemType.LEVEL2);
        assert sector.getSystemType() == SystemType.LEVEL2 : "Failed to set sector type.";

        Sector sameSector = board.getSector(1, 1);
        assert sameSector.getSystemType() == SystemType.LEVEL2 : "Sector data mismatch on retrieval.";

        Sector outOfBoundsSector = board.getSector(5, 5);
        assert outOfBoundsSector == null : "Sector retrieval out of bounds should return null.";

        System.out.println("Sector retrieval test passed.\n");
    }

    // 3. Test Board Reset
    public static void testBoardReset() {
        System.out.println("Testing Board Reset...");

        Board board = Board.getInstance();
        Sector sector = board.getSector(0, 0);

        Ship ship = new Ship("S1", "Blue", null);
        sector.addShip(ship);  // Add ship to sector

        assert sector.getShips().size() == 1 : "Failed to add ship before reset.";

        board.resetBoard();  // Reset board

        assert board.getSector(0, 0).getShips().isEmpty() : "Board reset failed to clear ships.";
        assert board.getSector(0, 0).getSystemType() == SystemType.NONE : "Sector type not reset to NONE.";

        System.out.println("Board reset test passed.\n");
    }
}
